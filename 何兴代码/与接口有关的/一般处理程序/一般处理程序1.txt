using Library;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Web;
using System.Web.Script.Serialization;

namespace Web.MallInterface
{
    /// <summary>
    /// Pay 的摘要说明
    /// </summary>
    public class Pay : IHttpHandler
    {

        public void ProcessRequest(HttpContext context)
        {
            context.Response.ContentType = "text/plain";

            string json = String.Empty;
            string message = string.Empty;
            bool result = false;
            //using (var reader = new StreamReader(context.Request.InputStream))
            //{
            //    json = reader.ReadToEnd();
            //}

            string s = "";


            //if (!string.IsNullOrEmpty(json) || json.Trim() != string.Empty)
            //{
            string key = context.Request["Key"].ToString();
            string str1 = PageValidate.GetMd5("HongBao").ToLower();
            string str2 = PageValidate.GetMd5(str1).ToLower();
            if (key.Equals(str2))
            {
                AllCore ac = new AllCore();

                string UserCode = context.Request["UserCode"].ToString();//用户编号
                string RegMoney1 = context.Request["RegMoney"].ToString();//支付金额
                string OrderCode = context.Request["OrderCode"].ToString();//订单号
                string Type1 = context.Request["Type"].ToString();//币种流水
                int Type = 0;

                decimal RegMoney = 0;
                try
                {
                    Type = int.Parse(Type1);
                    RegMoney = decimal.Parse(RegMoney1);
                }
                catch (Exception)
                {
                    result = false;
                    message = "转换参数出错！";
                    SendResponse(context, result, message);

                }

                DateTime time = DateTime.Now;//支付时间
                //string remark = context.Request["Remark"].ToString();//用途说明

                s += "UserCode:" + UserCode + "RegMoney=" + RegMoney + "OrderCode=" + OrderCode + "Type=" + Type;
                if (!string.IsNullOrEmpty(UserCode))
                {
                    lgk.Model.tb_user userModel = ac.userBLL.GetModel(" UserCode='" + UserCode + "'");
                    if (userModel != null)
                    {
                        //加入明细表
                        lgk.Model.tb_journal jModel = new lgk.Model.tb_journal();

                        jModel.UserID = userModel.UserID;
                        jModel.JournalDate = time;
                        jModel.JournalType = Type;
                        jModel.Remark = "购买订单号为" + OrderCode + "的商品";
                        jModel.RemarkEn = "";
                        jModel.Journal01 = Convert.ToInt32(userModel.UserID);
                        jModel.Journal02 = 1;
                        jModel.Journal03 = OrderCode;
                        jModel.InAmount = 0;
                        jModel.OutAmount = RegMoney;
                        if (jModel.JournalType == 1)
                        {
                            if (userModel.Emoney < RegMoney)
                            {
                                message = "购物券余额不足";
                            }
                            else
                            {
                                jModel.BalanceAmount = userModel.Emoney - RegMoney;
                                userModel.Emoney -= RegMoney;
                                userModel.User017 += RegMoney;
                                if (ac.userBLL.Update(userModel) && ac.journalBLL.Add(jModel) > 0)
                                {
                                    result = true;
                                    s += "result=true";
                                    message = "操作成功";
                                }
                                else
                                {
                                    message = "操作异常";
                                }
                            }
                        }
                        else if (jModel.JournalType == 2)
                        {
                            if (userModel.BonusAccount < RegMoney)
                            {
                                message = "生活积分余额不足";
                            }
                            else
                            {
                                jModel.BalanceAmount = userModel.BonusAccount - RegMoney;
                                userModel.BonusAccount -= RegMoney;
                                userModel.User017 += RegMoney;
                                if (ac.userBLL.Update(userModel) && ac.journalBLL.Add(jModel) > 0)
                                {
                                    s += "result=true";
                                    result = true;
                                    message = "操作成功";
                                }
                                else
                                {
                                    message = "操作异常";
                                }
                            }
                        }
                        else if (jModel.JournalType == 6)
                        {
                            if (userModel.GLmoney < RegMoney)
                            {
                                message = "现金积分余额不足";
                            }
                            else
                            {
                                jModel.BalanceAmount = userModel.GLmoney - RegMoney;
                                userModel.GLmoney -= RegMoney;
                                userModel.User017 += RegMoney;
                                if (ac.userBLL.Update(userModel) && ac.journalBLL.Add(jModel) > 0)
                                {
                                    s += "result=true";
                                    result = true;
                                    message = "操作成功";
                                }
                                else
                                {
                                    message = "操作异常";
                                }
                            }
                        }
                        else if (jModel.JournalType == 8)
                        {
                            if (userModel.B < RegMoney)
                            {
                                message = "B购物券余额不足";
                            }
                            else
                            {
                                jModel.BalanceAmount = userModel.B - RegMoney;
                                userModel.B -= RegMoney;
                                userModel.User017 += RegMoney;
                                if (ac.userBLL.Update(userModel) && ac.journalBLL.Add(jModel) > 0)
                                {
                                    s += "result=true";
                                    result = true;
                                    message = "操作成功";
                                }
                                else
                                {
                                    message = "操作异常";
                                }
                            }
                        }
                        else if (jModel.JournalType == 9)
                        {
                            if (userModel.C < RegMoney)
                            {
                                message = "C购物券余额不足";
                            }
                            else
                            {
                                jModel.BalanceAmount = userModel.C - RegMoney;
                                userModel.C -= RegMoney;
                                userModel.User017 += RegMoney;
                                if (ac.userBLL.Update(userModel) && ac.journalBLL.Add(jModel) > 0)
                                {
                                    s += "result=true";
                                    result = true;
                                    message = "操作成功";
                                }
                                else
                                {
                                    message = "操作异常";
                                }
                            }
                        }
                        else if (jModel.JournalType == 10)
                        {
                            if (userModel.D < RegMoney)
                            {
                                message = "D购物券余额不足";
                            }
                            else
                            {
                                jModel.BalanceAmount = userModel.D - RegMoney;
                                userModel.D -= RegMoney;
                                userModel.User017 += RegMoney;
                                if (ac.userBLL.Update(userModel) && ac.journalBLL.Add(jModel) > 0)
                                {
                                    s += "result=true";
                                    result = true;
                                    message = "操作成功";
                                }
                                else
                                {
                                    message = "操作异常";
                                }
                            }
                        }
                    }
                    else
                    {
                        message = "此用户不存在";
                    }
                }
                else
                {
                    message = "传递的用户账号数据为空";
                }
            }
            else
            {
                message = "验证出错";
            }


            //}
            System.IO.File.AppendAllText(context.Server.MapPath("~/log-redbag.txt"), s);
            SendResponse(context, result, message);
        }

        private void SendResponse(HttpContext context, bool result, string returnString)
        {
            context.Response.Clear();
            string json = "{\"status\":\"" + result.ToString().ToLower() + "\",\"message\":\"" + returnString + "\"}";
            JavaScriptSerializer jss = new JavaScriptSerializer();
            jss.Serialize(json);
            context.Response.Write(json);
            context.Response.End();
        }

        public bool IsReusable
        {
            get
            {
                return false;
            }
        }
    }
}